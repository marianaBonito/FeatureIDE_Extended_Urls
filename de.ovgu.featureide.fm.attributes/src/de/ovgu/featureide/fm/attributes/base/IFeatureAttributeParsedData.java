/* FeatureIDE - A Framework for Feature-Oriented Software Development
 * Copyright (C) 2005-2019  FeatureIDE team, University of Magdeburg, Germany
 *
 * This file is part of FeatureIDE.
 *
 * FeatureIDE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * FeatureIDE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with FeatureIDE.  If not, see <http://www.gnu.org/licenses/>.
 *
 * See http://featureide.cs.ovgu.de/ for further information.
 */
package de.ovgu.featureide.fm.attributes.base;

import de.ovgu.featureide.fm.attributes.format.XmlExtendedFeatureModelFormat;

/**
 * Interface that provides a data structure that is generated by the {@link XmlExtendedFeatureModelFormat}. This data structure hold information about the
 * parsed data of attributes and is given to the {@link AbstractFeatureAttributeFactory} to create attributes.
 *
 * @see AbstractFeatureAttributeFactory
 * @see XmlExtendedFeatureModelFormat
 *
 * @author Joshua Sprey
 * @author Chico Sundermann
 */
public interface IFeatureAttributeParsedData {

	/**
	 * @return The name of the parsed feature attribute.
	 */
	public String getName();

	/**
	 * @return The type of the parsed feature attribute.
	 */
	public String getType();

	/**
	 * @return The unit of the parsed feature attribute.
	 */
	public String getUnit();

	/**
	 * @return The value of the parsed feature attribute.
	 */
	public String getValue();

	/**
	 * @return true, if the parsed attribute was flagged as recursive.
	 */
	public String isRecursive();

	/**
	 * @return true, if the parsed attribute was flagged as configurable.
	 */
	public String isConfigurable();

	/**
	 * 
	 * @return true, if the only specified parameters are name and value In this case the attribute is considered recursed
	 */
	public boolean isRecursed();
}
